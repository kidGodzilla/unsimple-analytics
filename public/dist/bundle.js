/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/sql.js-httpvfs/dist/index.js":
/*!***************************************************!*\
  !*** ./node_modules/sql.js-httpvfs/dist/index.js ***!
  \***************************************************/
/***/ (function(module) {

eval("!function(e,t){if(true)module.exports=t();else { var r, n; }}(this,(function(){return(()=>{\"use strict\";var e={870:(e,t,n)=>{n.r(t),n.d(t,{createEndpoint:()=>o,expose:()=>l,proxy:()=>g,proxyMarker:()=>r,releaseProxy:()=>a,transfer:()=>y,transferHandlers:()=>c,windowEndpoint:()=>v,wrap:()=>f});const r=Symbol(\"Comlink.proxy\"),o=Symbol(\"Comlink.endpoint\"),a=Symbol(\"Comlink.releaseProxy\"),s=Symbol(\"Comlink.thrown\"),i=e=>\"object\"==typeof e&&null!==e||\"function\"==typeof e,c=new Map([[\"proxy\",{canHandle:e=>i(e)&&e[r],serialize(e){const{port1:t,port2:n}=new MessageChannel;return l(e,t),[n,[n]]},deserialize:e=>(e.start(),f(e))}],[\"throw\",{canHandle:e=>i(e)&&s in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function l(e,t=self){t.addEventListener(\"message\",(function n(r){if(!r||!r.data)return;const{id:o,type:a,path:i}=Object.assign({path:[]},r.data),c=(r.data.argumentList||[]).map(w);let f;try{const t=i.slice(0,-1).reduce(((e,t)=>e[t]),e),n=i.reduce(((e,t)=>e[t]),e);switch(a){case 0:f=n;break;case 1:t[i.slice(-1)[0]]=w(r.data.value),f=!0;break;case 2:f=n.apply(t,c);break;case 3:f=g(new n(...c));break;case 4:{const{port1:t,port2:n}=new MessageChannel;l(e,n),f=y(t,[t])}break;case 5:f=void 0}}catch(e){f={value:e,[s]:0}}Promise.resolve(f).catch((e=>({value:e,[s]:0}))).then((e=>{const[r,s]=b(e);t.postMessage(Object.assign(Object.assign({},r),{id:o}),s),5===a&&(t.removeEventListener(\"message\",n),u(t))}))})),t.start&&t.start()}function u(e){(function(e){return\"MessagePort\"===e.constructor.name})(e)&&e.close()}function f(e,t){return d(e,[],t)}function p(e){if(e)throw new Error(\"Proxy has been released and is not useable\")}function d(e,t=[],n=function(){}){let r=!1;const s=new Proxy(n,{get(n,o){if(p(r),o===a)return()=>E(e,{type:5,path:t.map((e=>e.toString()))}).then((()=>{u(e),r=!0}));if(\"then\"===o){if(0===t.length)return{then:()=>s};const n=E(e,{type:0,path:t.map((e=>e.toString()))}).then(w);return n.then.bind(n)}return d(e,[...t,o])},set(n,o,a){p(r);const[s,i]=b(a);return E(e,{type:1,path:[...t,o].map((e=>e.toString())),value:s},i).then(w)},apply(n,a,s){p(r);const i=t[t.length-1];if(i===o)return E(e,{type:4}).then(w);if(\"bind\"===i)return d(e,t.slice(0,-1));const[c,l]=m(s);return E(e,{type:2,path:t.map((e=>e.toString())),argumentList:c},l).then(w)},construct(n,o){p(r);const[a,s]=m(o);return E(e,{type:3,path:t.map((e=>e.toString())),argumentList:a},s).then(w)}});return s}function m(e){const t=e.map(b);return[t.map((e=>e[0])),(n=t.map((e=>e[1])),Array.prototype.concat.apply([],n))];var n}const h=new WeakMap;function y(e,t){return h.set(e,t),e}function g(e){return Object.assign(e,{[r]:!0})}function v(e,t=self,n=\"*\"){return{postMessage:(t,r)=>e.postMessage(t,n,r),addEventListener:t.addEventListener.bind(t),removeEventListener:t.removeEventListener.bind(t)}}function b(e){for(const[t,n]of c)if(n.canHandle(e)){const[r,o]=n.serialize(e);return[{type:3,name:t,value:r},o]}return[{type:0,value:e},h.get(e)||[]]}function w(e){switch(e.type){case 3:return c.get(e.name).deserialize(e.value);case 0:return e.value}}function E(e,t,n){return new Promise((r=>{const o=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join(\"-\");e.addEventListener(\"message\",(function t(n){n.data&&n.data.id&&n.data.id===o&&(e.removeEventListener(\"message\",t),r(n.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:o},t),n)}))}},162:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\"default\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDbWorker=void 0;const s=a(n(870));async function i(e){if(e.data&&\"eval\"===e.data.action){const t=new Int32Array(e.data.notify,0,2),n=new Uint8Array(e.data.notify,8);let r;try{r={ok:await u(e.data.request)}}catch(t){console.error(\"worker request error\",e.data.request,t),r={err:String(t)}}const o=(new TextEncoder).encode(JSON.stringify(r));n.set(o,0),t[1]=o.length,Atomics.notify(t,0)}}function c(e){if(\"BODY\"===e.tagName)return\"body\";const t=[];for(;e.parentElement&&\"BODY\"!==e.tagName;){if(e.id){t.unshift(\"#\"+e.id);break}{let n=1,r=e;for(;r.previousElementSibling;)r=r.previousElementSibling,n++;t.unshift(e.tagName.toLowerCase()+\":nth-child(\"+n+\")\")}e=e.parentElement}return t.join(\" > \")}function l(e){return Object.keys(e)}async function u(e){if(console.log(\"dom vtable request\",e),\"select\"===e.type)return[...document.querySelectorAll(e.selector)].map((t=>{const n={};for(const r of e.columns)\"selector\"===r?n.selector=c(t):\"parent\"===r?t.parentElement&&(n.parent=t.parentElement?c(t.parentElement):null):\"idx\"===r||(n[r]=t[r]);return n}));if(\"insert\"===e.type){if(!e.value.parent)throw Error('\"parent\" column must be set when inserting');const t=document.querySelectorAll(e.value.parent);if(0===t.length)throw Error(`Parent element ${e.value.parent} could not be found`);if(t.length>1)throw Error(`Parent element ${e.value.parent} ambiguous (${t.length} results)`);const n=t[0];if(!e.value.tagName)throw Error(\"tagName must be set for inserting\");const r=document.createElement(e.value.tagName);for(const t of l(e.value))if(null!==e.value[t]){if(\"tagName\"===t||\"parent\"===t)continue;if(\"idx\"===t||\"selector\"===t)throw Error(`${t} can't be set`);r[t]=e.value[t]}return n.appendChild(r),null}if(\"update\"===e.type){const t=document.querySelector(e.value.selector);if(!t)throw Error(`Element ${e.value.selector} not found!`);const n=[];for(const r of l(e.value)){const o=e.value[r];if(\"parent\"!==r){if(\"idx\"!==r&&\"selector\"!==r&&o!==t[r]){if(console.log(\"SETTING \",r,t[r],\"->\",o),\"tagName\"===r)throw Error(\"can't change tagName\");n.push(r)}}else if(o!==c(t.parentElement)){const e=document.querySelectorAll(o);if(1!==e.length)throw Error(`Invalid target parent: found ${e.length} matches`);e[0].appendChild(t)}}for(const r of n)t[r]=e.value[r];return null}throw Error(`unknown request ${e.type}`)}s.transferHandlers.set(\"WORKERSQLPROXIES\",{canHandle:e=>!1,serialize(e){throw Error(\"no\")},deserialize:e=>(e.start(),s.wrap(e))}),t.createDbWorker=async function(e,t,n){const r=new Worker(t),o=s.wrap(r),a=await o.SplitFileHttpDatabase(n,e);return r.addEventListener(\"message\",i),{db:a,worker:o,configs:e}}},432:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)\"default\"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,\"__esModule\",{value:!0}),o(n(162),t)}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}return n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n(432)})()}));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/sql.js-httpvfs/dist/index.js?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sql.js-httpvfs */ \"./node_modules/sql.js-httpvfs/dist/index.js\");\n/* harmony import */ var sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_0__);\n\nconst workerUrl = new URL(/* asset import */ __webpack_require__(/*! sql.js-httpvfs/dist/sqlite.worker.js */ \"./node_modules/sql.js-httpvfs/dist/sqlite.worker.js\"), __webpack_require__.b);\nconst wasmUrl = new URL(/* asset import */ __webpack_require__(/*! sql.js-httpvfs/dist/sql-wasm.wasm */ \"./node_modules/sql.js-httpvfs/dist/sql-wasm.wasm\"), __webpack_require__.b);\nlet renderTime = 0;\nasync function load() {\n    // let url = (location.hostname === 'localhost' ? `${ location.protocol }//${ location.host }/` : 'https://analytics.serv.rs/') + `analytics.sqlite3`;\n    let url = `${location.protocol}//${location.host}/analytics.sqlite3`;\n    // if (location.hostname !== 'localhost') url = 'https://implausible.b-cdn.net/analytics.sqlite3'; // Does not seem to support range requests (`Accept-Ranges: bytes` header missing)\n    // console.log('url', url);\n    const worker = await (0,sql_js_httpvfs__WEBPACK_IMPORTED_MODULE_0__.createDbWorker)([\n        {\n            from: \"inline\",\n            config: {\n                serverMode: \"full\",\n                url: url,\n                requestChunkSize: (1024 * 32)\n            }\n        }\n    ], workerUrl.toString(), wasmUrl.toString());\n    function $(selector) {\n        return document.querySelector(selector) || {};\n    }\n    function capitalize(s) {\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n    function tableFragment(o, keyFormatter = s => s, valueFormatter = s => s) {\n        let fragment = '', max = 0, lines = [];\n        for (let k in o) {\n            let v = o[k];\n            if (max < v)\n                max = v;\n            // @ts-ignore\n            lines.push({ k, v });\n        }\n        // @ts-ignore\n        lines.sort((b, a) => a.v > b.v && 1 || -1);\n        lines.forEach((line, i) => {\n            if (i > 9)\n                return;\n            // @ts-ignore\n            let { v, k } = line;\n            fragment += `\n<div class=\"mb-1\">\n    <div class=\"shaded d-inline-block bg-grey text-nowrap pt-1 pb-1\" style=\"width: ${(v / max) * 85}%\">&nbsp;${keyFormatter(k)}</div>\n    <span class=\"float-right text-right pt-1\">${valueFormatter(v)}</span>\n</div>`;\n        });\n        return fragment;\n    }\n    function daysAgo(n) {\n        const ago = new Date();\n        return ago.setDate(ago.getDate() - n);\n    }\n    function isoDate(d) {\n        if (!d)\n            d = new Date();\n        if (typeof d !== 'object' || !d.toISOString)\n            d = new Date(d);\n        return d.toISOString().slice(0, 10);\n    }\n    async function render(start, end) {\n        let host = new URLSearchParams(window.location.search).get('host') || 'analytics.serv.rs';\n        if (host.indexOf('www.') === 0)\n            host = host.replace('www.', '').toLowerCase();\n        $('h5.name').textContent = capitalize(host);\n        let statement = `SELECT * FROM visits WHERE host = '${host}' AND date BETWEEN '${isoDate(start)}' AND '${isoDate(end)}'`;\n        // let statement = `SELECT * FROM visits WHERE host = '${ host }'`;\n        let hourly = Math.floor(start / 10000) === Math.floor(end / 10000);\n        // console.log(statement, hourly, start, end);\n        let result = await worker.db.query(statement);\n        result = result.sort((a, b) => a.ts > b.ts && 1 || -1);\n        console.log('query result', result);\n        // Cleanup Loading Spinners / previous output\n        $('.loadtimes').innerHTML = '';\n        $('.languages').innerHTML = '';\n        $('.browsers').innerHTML = '';\n        $('.devices').innerHTML = '';\n        $('#svgMap').innerHTML = '';\n        $('#visits').innerHTML = '';\n        $('.pages').innerHTML = '';\n        $('.bots').innerHTML = '';\n        $('.new').innerHTML = '';\n        $('.os').innerHTML = '';\n        // Debug / Demo output\n        $('div pre').textContent = JSON.stringify(result, null, 2);\n        // Aggregate results\n        let utm = { source: { None: 0 }, medium: { None: 0 }, content: { None: 0 }, campaign: { None: 0 }, term: { None: 0 } };\n        let maxSessionLength = {};\n        let pageVisits = {};\n        let referrers = {};\n        let languages = {};\n        let countries = {};\n        let pathnames = {};\n        let loadTimes = {};\n        let pageviews = 0;\n        let visitors = [];\n        let browsers = {};\n        let botUsers = {};\n        let isNew = {};\n        let edges = {};\n        let types = {};\n        let map = {};\n        let os = {};\n        // console.log(result);\n        function incr(o, k, v = 1) {\n            if (!o[k])\n                o[k] = 0;\n            o[k] += v;\n        }\n        function determineType(w, reported, type = '') {\n            if (w <= 600)\n                type = 'mobile';\n            else if (w <= 992)\n                type = 'tablet';\n            else if (w <= 1440)\n                type = 'laptop';\n            else\n                type = 'desktop';\n            // console.log('reported:', reported, 'determined:', type, w);\n            return type;\n        }\n        function lang(s) {\n            let langLookup = { \"aa\": \"Afar\", \"ab\": \"Abkhazian\", \"ae\": \"Avestan\", \"af\": \"Afrikaans\", \"ak\": \"Akan\", \"am\": \"Amharic\", \"an\": \"Aragonese\", \"ar\": \"Arabic\", \"as\": \"Assamese\", \"av\": \"Avaric\", \"ay\": \"Aymara\", \"az\": \"Azerbaijani\", \"ba\": \"Bashkir\", \"be\": \"Belarusian\", \"bg\": \"Bulgarian\", \"bh\": \"Bihari languages\", \"bi\": \"Bislama\", \"bm\": \"Bambara\", \"bn\": \"Bengali\", \"bo\": \"Tibetan\", \"br\": \"Breton\", \"bs\": \"Bosnian\", \"ca\": \"Catalan; Valencian\", \"ce\": \"Chechen\", \"ch\": \"Chamorro\", \"co\": \"Corsican\", \"cr\": \"Cree\", \"cs\": \"Czech\", \"cu\": \"Church Slavic; Old Slavonic; Church Slavonic; Old Bulgarian; Old Church Slavonic\", \"cv\": \"Chuvash\", \"cy\": \"Welsh\", \"da\": \"Danish\", \"de\": \"German\", \"dv\": \"Divehi; Dhivehi; Maldivian\", \"dz\": \"Dzongkha\", \"ee\": \"Ewe\", \"el\": \"Greek, Modern (1453-)\", \"en\": \"English\", \"eo\": \"Esperanto\", \"es\": \"Spanish; Castilian\", \"et\": \"Estonian\", \"eu\": \"Basque\", \"fa\": \"Persian\", \"ff\": \"Fulah\", \"fi\": \"Finnish\", \"fj\": \"Fijian\", \"fo\": \"Faroese\", \"fr\": \"French\", \"fy\": \"Western Frisian\", \"ga\": \"Irish\", \"gd\": \"Gaelic; Scomttish Gaelic\", \"gl\": \"Galician\", \"gn\": \"Guarani\", \"gu\": \"Gujarati\", \"gv\": \"Manx\", \"ha\": \"Hausa\", \"he\": \"Hebrew\", \"hi\": \"Hindi\", \"ho\": \"Hiri Motu\", \"hr\": \"Croatian\", \"ht\": \"Haitian; Haitian Creole\", \"hu\": \"Hungarian\", \"hy\": \"Armenian\", \"hz\": \"Herero\", \"ia\": \"Interlingua (International Auxiliary Language Association)\", \"id\": \"Indonesian\", \"ie\": \"Interlingue; Occidental\", \"ig\": \"Igbo\", \"ii\": \"Sichuan Yi; Nuosu\", \"ik\": \"Inupiaq\", \"io\": \"Ido\", \"is\": \"Icelandic\", \"it\": \"Italian\", \"iu\": \"Inuktitut\", \"ja\": \"Japanese\", \"jv\": \"Javanese\", \"ka\": \"Georgian\", \"kg\": \"Kongo\", \"ki\": \"Kikuyu; Gikuyu\", \"kj\": \"Kuanyama; Kwanyama\", \"kk\": \"Kazakh\", \"kl\": \"Kalaallisut; Greenlandic\", \"km\": \"Central Khmer\", \"kn\": \"Kannada\", \"ko\": \"Korean\", \"kr\": \"Kanuri\", \"ks\": \"Kashmiri\", \"ku\": \"Kurdish\", \"kv\": \"Komi\", \"kw\": \"Cornish\", \"ky\": \"Kirghiz; Kyrgyz\", \"la\": \"Latin\", \"lb\": \"Luxembourgish; Letzeburgesch\", \"lg\": \"Ganda\", \"li\": \"Limburgan; Limburger; Limburgish\", \"ln\": \"Lingala\", \"lo\": \"Lao\", \"lt\": \"Lithuanian\", \"lu\": \"Luba-Katanga\", \"lv\": \"Latvian\", \"mg\": \"Malagasy\", \"mh\": \"Marshallese\", \"mi\": \"Maori\", \"mk\": \"Macedonian\", \"ml\": \"Malayalam\", \"mn\": \"Mongolian\", \"mr\": \"Marathi\", \"ms\": \"Malay\", \"mt\": \"Maltese\", \"my\": \"Burmese\", \"na\": \"Nauru\", \"nb\": \"Bokmål, Norwegian; Norwegian Bokmål\", \"nd\": \"Ndebele, North; North Ndebele\", \"ne\": \"Nepali\", \"ng\": \"Ndonga\", \"nl\": \"Dutch; Flemish\", \"nn\": \"Norwegian Nynorsk; Nynorsk, Norwegian\", \"no\": \"Norwegian\", \"nr\": \"Ndebele, South; South Ndebele\", \"nv\": \"Navajo; Navaho\", \"ny\": \"Chichewa; Chewa; Nyanja\", \"oc\": \"Occitan (post 1500)\", \"oj\": \"Ojibwa\", \"om\": \"Oromo\", \"or\": \"Oriya\", \"os\": \"Ossetian; Ossetic\", \"pa\": \"Panjabi; Punjabi\", \"pi\": \"Pali\", \"pl\": \"Polish\", \"ps\": \"Pushto; Pashto\", \"pt\": \"Portuguese\", \"qu\": \"Quechua\", \"rm\": \"Romansh\", \"rn\": \"Rundi\", \"ro\": \"Romanian; Moldavian; Moldovan\", \"ru\": \"Russian\", \"rw\": \"Kinyarwanda\", \"sa\": \"Sanskrit\", \"sc\": \"Sardinian\", \"sd\": \"Sindhi\", \"se\": \"Northern Sami\", \"sg\": \"Sango\", \"si\": \"Sinhala; Sinhalese\", \"sk\": \"Slovak\", \"sl\": \"Slovenian\", \"sm\": \"Samoan\", \"sn\": \"Shona\", \"so\": \"Somali\", \"sq\": \"Albanian\", \"sr\": \"Serbian\", \"ss\": \"Swati\", \"st\": \"Sotho, Southern\", \"su\": \"Sundanese\", \"sv\": \"Swedish\", \"sw\": \"Swahili\", \"ta\": \"Tamil\", \"te\": \"Telugu\", \"tg\": \"Tajik\", \"th\": \"Thai\", \"ti\": \"Tigrinya\", \"tk\": \"Turkmen\", \"tl\": \"Tagalog\", \"tn\": \"Tswana\", \"to\": \"Tonga (Tonga Islands)\", \"tr\": \"Turkish\", \"ts\": \"Tsonga\", \"tt\": \"Tatar\", \"tw\": \"Twi\", \"ty\": \"Tahitian\", \"ug\": \"Uighur; Uyghur\", \"uk\": \"Ukrainian\", \"ur\": \"Urdu\", \"uz\": \"Uzbek\", \"ve\": \"Venda\", \"vi\": \"Vietnamese\", \"vo\": \"Volapük\", \"wa\": \"Walloon\", \"wo\": \"Wolof\", \"xh\": \"Xhosa\", \"yi\": \"Yiddish\", \"yo\": \"Yoruba\", \"za\": \"Zhuang; Chuang\", \"zh\": \"Chinese\", \"zu\": \"Zulu\" };\n            try {\n                s = s.toLowerCase().split('-')[0];\n            }\n            catch (e) { }\n            try {\n                s = langLookup[s];\n            }\n            catch (e) { }\n            if (!s || s == 'undefined')\n                s = 'Unknown';\n            return s;\n        }\n        // Construct directed graph\n        let nodes = [], usedNodes = [], sessions = {}, links = {}, idLookup = {}, linkArray = [], linkRows = [];\n        result.forEach(item => {\n            let d = new Date(item.ts * 1000);\n            let h = d.getUTCHours();\n            // Aggregate\n            incr(map, hourly ? h : isoDate(d));\n            // referrers\n            incr(referrers, item.referer_host);\n            // Device type\n            // incr(types, item.device_type);\n            incr(types, determineType(item.width, item.device_type));\n            // OS\n            incr(os, item.os);\n            // Edge Locations\n            incr(edges, item.edge_location);\n            // Browser\n            incr(browsers, item.browser);\n            // Language\n            incr(languages, lang(item.lang));\n            // Pathnames\n            incr(pathnames, item.pathname);\n            // Load times\n            incr(loadTimes, item.pathname, Math.max(item.load_time, 0));\n            // New vs. returning\n            incr(isNew, item.is_new);\n            // Bot users, headless users\n            incr(botUsers, item.headless ? 'Headless Browsers' : (item.bot ? 'Bots' : 'Normal Users'));\n            // UTM codes\n            function getUTM(namespace = 'source', url = '') {\n                let value = (new URLSearchParams(new URL(url.toLowerCase()).search)).get('utm_' + namespace);\n                if (value) {\n                    // @ts-ignore\n                    if (!utm[namespace][value])\n                        utm[namespace][value] = 0;\n                    utm[namespace][value]++;\n                }\n                else {\n                    utm[namespace]['None']++;\n                }\n            }\n            getUTM('source', item.url);\n            getUTM('medium', item.url);\n            getUTM('content', item.url);\n            getUTM('campaign', item.url);\n            getUTM('term', item.url);\n            // Nodes, sessions, and Links\n            // @ts-ignore\n            if (!nodes.includes(item.pathname))\n                nodes.push(item.pathname);\n            if (!sessions[item.ip])\n                sessions[item.ip] = [];\n            sessions[item.ip].push(item.pathname);\n            // Session length\n            if (item.session_length && (!maxSessionLength[item.ip] || maxSessionLength[item.ip] < item.session_length))\n                maxSessionLength[item.ip] = item.session_length;\n            // Page visits pageVisits\n            if (!pageVisits[item.ip])\n                pageVisits[item.ip] = 0;\n            pageVisits[item.ip]++;\n            // Countries\n            if (!countries[item.country_code])\n                countries[item.country_code] = { visitors: 0 };\n            countries[item.country_code].visitors++;\n            // Pageviews & Visitors\n            // @ts-ignore\n            if (!visitors.includes(item.ip))\n                visitors.push(item.ip);\n            pageviews++;\n        });\n        // console.log('botUsers', botUsers);\n        // console.log('utm', utm);\n        // Todo: compute load times\n        let computedLoadTimes = {};\n        for (let k in loadTimes) {\n            let total = loadTimes[k];\n            computedLoadTimes[k] = total / pathnames[k];\n        }\n        // console.log('loadTimes', loadTimes, pathnames, computedLoadTimes);\n        // Format sankey nodes\n        let nodes2 = [];\n        nodes.forEach((node, i) => {\n            nodes2.push({ id: i, name: node, color: \"green\" });\n            idLookup[node] = i;\n        });\n        nodes = nodes2;\n        // Remove repeating duplicates\n        for (let ip in sessions) {\n            let session = sessions[ip], reduced = [], last;\n            session.forEach(item => {\n                if (last !== item)\n                    reduced.push(item);\n                last = item;\n            });\n            sessions[ip] = reduced;\n        }\n        let sessions2 = JSON.parse(JSON.stringify(sessions));\n        // console.log('sessions', sessions2);\n        // Accumulate connections\n        for (let ip in sessions) {\n            let session = sessions[ip], current, previous;\n            while (session.length) {\n                current = session.shift();\n                if (previous && current && !usedNodes.includes(previous) && !usedNodes.includes(current)) {\n                    // console.log('link', previous, current);\n                    if (!links[previous])\n                        links[previous] = {};\n                    if (!links[previous][current])\n                        links[previous][current] = 0;\n                    links[previous][current]++;\n                    usedNodes.push(current);\n                }\n                previous = current;\n            }\n        }\n        // Accumulate connections (method 2)\n        let graph = [[], [], [], [], []];\n        for (let ip in sessions2) {\n            let session = sessions2[ip], previous;\n            session.forEach((item, i) => {\n                if (previous && i <= 5) {\n                    let link = `${previous} ${item}`;\n                    graph[i - 1].push(link);\n                }\n                previous = item;\n            });\n        }\n        // console.log('graph', graph);\n        // Create an alternate directed graph (method 2)\n        let graphLinks = [], graph2 = {};\n        graph.forEach((graphItem, i) => {\n            graphItem.forEach((graphItem, j) => {\n                let p = graphItem.split(' ');\n                let ps = `Step ${i + 1}: ${p[0]}=Step ${i + 2}: ${p[1]}`;\n                if (!graph2[ps])\n                    graph2[ps] = 0;\n                graph2[ps]++;\n            });\n        });\n        for (let k in graph2) {\n            let v = graph2[k];\n            let p = k.split('=');\n            graphLinks.push([p[0], p[1], v]);\n        }\n        // console.log('graphLinks', graph2, graphLinks);\n        // Create directed graph\n        for (let j in links) {\n            let o = links[j];\n            for (let k in o) {\n                if (j != k) {\n                    linkArray.push({ source: idLookup[j], target: idLookup[k], value: o[k] });\n                    linkRows.push([j, k, o[k]]);\n                }\n            }\n        }\n        // console.log('dg', nodes, linkArray, linkRows);\n        // Calculate average session duration\n        let avgSessionLength = 0, counter = 0;\n        for (let k in maxSessionLength) {\n            avgSessionLength += maxSessionLength[k];\n            counter++;\n        }\n        if (counter)\n            avgSessionLength = avgSessionLength / counter;\n        // console.log(maxSessionLength, avgSessionLength, counter);\n        // Calculate Bounce Rate\n        let onePageVisits = 0, visitorCount = visitors.length;\n        for (let k in pageVisits) {\n            if (pageVisits[k] === 1)\n                onePageVisits++;\n        }\n        let bounceRate = onePageVisits / visitorCount;\n        // console.log(pageVisits, bounceRate, onePageVisits, visitorCount)\n        let data = [];\n        if (hourly) {\n            for (let i = 0; i < 23; i++) {\n                // @ts-ignore\n                data.push({ hour: `${isoDate(start)}T${i}:00Z`, value: (map[i] || 0) });\n            }\n        }\n        else {\n            for (let k in map) {\n                // @ts-ignore\n                data.push({ hour: `${k}`, value: (map[k] || 0) });\n            }\n        }\n        function humanSeconds(n) {\n            if (n < 1)\n                return Math.round(n * 1000) + 'ms';\n            else\n                return n.toFixed(2) + 's';\n        }\n        // console.log(map, data, edges, referrers, browsers, pathnames, os, types, languages, pageviews, visitors.length);\n        let typeTooltips = { mobile: 'below 600px', tablet: '600px to 992px', laptop: '992px to 1440px', desktop: 'above 1440px' };\n        $('.referrers').innerHTML = tableFragment(referrers, s => s ? `<img src=\"https://logo.clearbit.com/${s}\" onerror=\"this.onerror=null; this.src='default.png';\">&nbsp;<a class=\"d-inline-block text-truncate\" href=\"http://${s}\" target=\"_blank\">${s}</a>` : 'Direct / None');\n        $('.devices').innerHTML = tableFragment(types, s => `<span class=\"cursor-help\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"${typeTooltips[s]}\">${s.charAt(0).toUpperCase() + s.slice(1)}</span>`);\n        $('.loadtimes').innerHTML = tableFragment(computedLoadTimes, s => `<a class=\"d-inline-block text-truncate\" href=\"http://${host}${s}\" target=\"_blank\">${s}</a>`, s => humanSeconds(s));\n        $('.pages').innerHTML = tableFragment(pathnames, s => `<a class=\"d-inline-block text-truncate\" href=\"http://${host}${s}\" target=\"_blank\">${s}</a>`);\n        $('.languages').innerHTML = tableFragment(languages, s => s ? s : 'Unknown');\n        $('.new').innerHTML = tableFragment(isNew, s => parseInt(s) ? 'New' : 'Returning');\n        $('.campaign').innerHTML = tableFragment(utm.campaign);\n        $('.browsers').innerHTML = tableFragment(browsers);\n        $('.medium').innerHTML = tableFragment(utm.medium);\n        $('.source').innerHTML = tableFragment(utm.source);\n        $('.bots').innerHTML = tableFragment(botUsers);\n        $('.os').innerHTML = tableFragment(os);\n        // Attach tooltips\n        let tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n        tooltipTriggerList.map(function (tooltipTriggerEl) {\n            // @ts-ignore\n            return new bootstrap.Tooltip(tooltipTriggerEl);\n        });\n        function renderCharts() {\n            $('#sankey_multiple').innerHTML = '';\n            $('#svgMap').innerHTML = '';\n            $('#visits').innerHTML = '';\n            // @ts-ignore\n            new Morris.Area({\n                // ID of the element in which to draw the chart.\n                element: 'visits',\n                // Chart data records -- each entry in this array corresponds to a point on\n                // the chart.\n                data: data || [\n                    { year: '2008', value: 20 },\n                    { year: '2009', value: 10 },\n                    { year: '2010', value: 5 },\n                    { year: '2011', value: 5 },\n                    { year: '2012', value: 20 }\n                ],\n                // The name of the data record attribute that contains x-values.\n                xkey: 'hour',\n                xLabels: hourly ? 'hour' : 'day',\n                dateFormat: function (x) { return hourly ? new Date(x).toString() : new Date(x).toLocaleString().split(',')[0]; },\n                // A list of names of data record attributes that contain y-values.\n                ykeys: ['value'],\n                // Labels for the ykeys -- will be displayed when you hover over the\n                // chart.\n                labels: ['Visits'],\n                lineWidth: 4,\n                pointSize: 5,\n                fillOpacity: 0.16,\n                lineColors: ['#2847b7', '#3459E6', '#1a2c72']\n                // smooth: false\n            });\n            // SVG Map\n            // @ts-ignore\n            new svgMap({\n                targetElementID: 'svgMap',\n                colorMax: '#3459E6',\n                colorMin: '#c7d2fc',\n                colorNoData: '#E2E2E2',\n                data: {\n                    data: {\n                        visitors: {\n                            name: 'visitors',\n                            format: '{0}',\n                            thousandSeparator: ','\n                        }\n                    },\n                    applyData: 'visitors',\n                    values: countries || {\n                        AF: { visitors: 587 },\n                        AL: { visitors: 4583 },\n                        DZ: { visitors: 4293 }\n                    }\n                }\n            });\n            if (linkArray.length > 1) {\n                // console.log('sankey-ing', nodes, linkArray, linkRows);\n                // @ts-ignore\n                google.charts.load(\"current\", { packages: [\"sankey\"] });\n                // @ts-ignore\n                google.charts.setOnLoadCallback(drawChart);\n                function drawChart() {\n                    // @ts-ignore\n                    var data = new google.visualization.DataTable();\n                    data.addColumn('string', 'From');\n                    data.addColumn('string', 'To');\n                    data.addColumn('number', 'Sessions');\n                    data.addRows(graphLinks);\n                    // Instantiate and draw our chart, passing in some options.\n                    // @ts-ignore\n                    var chart = new google.visualization.Sankey(document.getElementById('sankey_multiple'));\n                    chart.draw(data);\n                }\n                // @ts-ignore\n                // var d3 = window.d3, objSankey = window.objSankey = sk.createSankey('#sankeyChart', {\n                //   margin: { top: 10, left: 0, right: 0, bottom: 0 },\n                //   nodes: {\n                //     dynamicSizeFontNode: {\n                //       enabled: true,\n                //       minSize: 14,\n                //       maxSize: 30\n                //     },\n                //     fontSize: 14, // if dynamicSizeFontNode not enabled\n                //     draggableX: false, // default [ false ]\n                //     draggableY: true, // default [ true ]\n                //     colors: d3.scaleOrdinal(d3.schemeCategory10)\n                //   },\n                //   links: {\n                //     formatValue: function(val) {\n                //       return d3.format(\",.0f\")(val) + ' user(s)';\n                //     },\n                //     unit: 'user(s)' // if not set formatValue function\n                //   },\n                //   tooltip: {\n                //     infoDiv: true,  // if false display default tooltip\n                //     labelSource: 'Input:',\n                //     labelTarget: 'Output:'\n                //   }\n                // }, {\n                //   nodes: nodes || [\n                //     {id: 0, name: \"Alice\", color: \"green\"},\n                //     {id: 1, name: \"Bob\", color: \"yellow\"},\n                //     {id: 2, name: \"Carol\", color: \"blue\"}\n                //   ],\n                //   links: linkArray || [\n                //     {source: 0, target: 1, value: 1},\n                //     {source: 1, target: 2, value: 1}\n                //   ]\n                // });\n                $('.userflow').classList.remove('d-none');\n            }\n            else {\n                $('.userflow').classList.add('d-none');\n            }\n        }\n        window.addEventListener('resize', () => {\n            setTimeout(renderCharts, 555);\n        });\n        renderCharts();\n        function fmtMSS(s) { return (s - (s %= 60)) / 60 + ('m ') + parseInt(s); }\n        avgSessionLength = parseFloat(avgSessionLength.toFixed(2));\n        // Pageviews, Visitors, Bounce Rate, Duration\n        $('.visitors').textContent = visitors.length;\n        $('.pageviews').textContent = pageviews;\n        $('.duration').textContent = avgSessionLength ? (avgSessionLength < 60 ? avgSessionLength : fmtMSS(avgSessionLength)) + 's' : '-';\n        $('.bounced').textContent = (bounceRate ? (bounceRate * 100).toFixed(2) : 0) + '%';\n        // Render complete\n        renderTime = renderTime || window.performance.now() / 1000;\n        console.log('page rendered in', renderTime + 's');\n        // Todo: send this somewhere I can analyze\n    }\n    // Render data for the currently-selected time range\n    function renderCurrentRange() {\n        let range = new URLSearchParams(window.location.search).get('range') || 1;\n        // @ts-ignore\n        let currentRange = ranges[range];\n        render(daysAgo(currentRange[1]), daysAgo(currentRange[2]));\n        $('.dropdown-toggle.right').textContent = currentRange[0];\n    }\n    setInterval(renderCurrentRange, 15 * 60 * 1000); // 15 minute refresh interval\n    renderCurrentRange();\n    // Get alternate domains to build dropdown menu\n    let res = await worker.db.query(`SELECT DISTINCT host FROM visits`), domains = [], fragment = '';\n    // @ts-ignore\n    res.forEach(item => domains.push(item.host));\n    domains.sort();\n    // Build dropdown menu HTML fragment\n    domains.forEach((domain, i) => {\n        // @ts-ignore\n        if (!domain.includes('meetingroom365') && !domain.includes('localhost') && i < 14)\n            fragment += `<a class=\"dropdown-item cp\" href=\"?host=${domain}\">${capitalize(domain)}</a>`;\n    });\n    // Render fragments\n    fragment += `<a class=\"dropdown-item cp\" onclick=\"changeDomain()\">Custom Domain</a>`;\n    $('.websites').innerHTML = fragment;\n    // @ts-ignore\n    window.daysAgo = daysAgo;\n    // @ts-ignore\n    window.render = render;\n}\nload();\n\n\n//# sourceURL=webpack:///./src/index.ts?");

/***/ }),

/***/ "./node_modules/sql.js-httpvfs/dist/sql-wasm.wasm":
/*!********************************************************!*\
  !*** ./node_modules/sql.js-httpvfs/dist/sql-wasm.wasm ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"c74ad46623e4ee643959.wasm\";\n\n//# sourceURL=webpack:///./node_modules/sql.js-httpvfs/dist/sql-wasm.wasm?");

/***/ }),

/***/ "./node_modules/sql.js-httpvfs/dist/sqlite.worker.js":
/*!***********************************************************!*\
  !*** ./node_modules/sql.js-httpvfs/dist/sqlite.worker.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"8c500ff8a49b305f9ab6.js\";\n\n//# sourceURL=webpack:///./node_modules/sql.js-httpvfs/dist/sqlite.worker.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;